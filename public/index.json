[{"content":"I want to write about my code projects. Where can I do that?\nCode Projects #Diaries 2024-01-21 20:55: The internet is such a cool thing. I spent today working on my website and home automation stuff, and now I\u0026rsquo;m hanging out with my best friends on Discord. We live thousands of miles away, yet we can chat as if we were sitting next to each other. Each day I wake up grateful that I was born in the 21st century.\n","permalink":"http://localhost:1313/pages/2024-01-21/","summary":"\u003cp\u003eI want to write about my code projects. Where can I do that?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://localhost:1313/pages/code-projects/\"\u003eCode Projects\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e#Diaries \u003ca href=\"http://localhost:1313/pages/2024-01-21/\"\u003e2024-01-21\u003c/a\u003e 20:55: The internet is such a cool thing. I spent today working on my website and home automation stuff, and now I\u0026rsquo;m hanging out with my best friends on Discord. We live thousands of miles away, yet we can chat as if we were sitting next to each other. Each day I wake up grateful that I was born in the 21st century.\u003c/p\u003e","title":"2024-01-21"},{"content":"14:33 it\u0026rsquo;s valentines day! i\u0026rsquo;m updating my about page to reflect recent changes\n","permalink":"http://localhost:1313/pages/2025-02-14/","summary":"\u003cp\u003e14:33  it\u0026rsquo;s valentines day! i\u0026rsquo;m updating my about page to reflect recent changes\u003c/p\u003e","title":"2025-02-14"},{"content":"overview Home Assistant is essentially a home automation platform designed to be both accessible to users and powerful for enthusiasts. It is hosted on local hardware using software created by Nabu Casa (who also maintain ESPHome, a project I fully intend to utilize in the future). Home Assistant boasts a dedicated enterprise community that have developed a robust ecosystem of hardware and software compatible with Home Assistant right out of the box. Furthermore, through the Home Assistant Community Store (colloquially HACS), users can install and run custom integrations, add-ons, and UI components created and maintained by Home Assistant\u0026rsquo;s passionate user community.\nMy personal Home Assistant setup runs off of an old Dell Precision 5520 laptop that I used in college. The laptop\u0026rsquo;s dedicated NVidia Quadro graphics card enables me to run local, high-intensive computing projects including AI and machine learning (more on that later). Nabu Casa\u0026rsquo;s custom OS, HASS, is installed directly on the hardware, which enables tighter integration with the host system\u0026rsquo;s hardware capabilities (something the containerized version of the software doesn\u0026rsquo;t support).\nuser interface Home Assistant maintains a local server that, among other things, hosts the lovelace dashboard. Upon first opening, the user is greeted with a login screen. Assuming authentication succeeds, the above home page is displayed to the user. Immediately, multiple features can be noticed:\nFront Door Snapshot is a continuous feed of snapshots from my front door camera on 3-second intervals. This allows me to quickly get a good idea of the conditions at home (such as weather, packages, etc - currently, my car is semi-disassembled in the driveway). Below the front door image, I have configured a dashboard to display data from a free weather API maintained by Meteorologisk institutt as well as information on sunrise, sunset, moon phase, and more. logseq.order-list-type:: number\nAt the top of the second column are buttons to interact with Ada via voice or via text. Below the Ada buttons, I created a dashboard to display my and my partner\u0026rsquo;s statuses, including location (anonymized by named locations), battery percentage and status, and connectivity status. Beneath the status dashboard is an integration to display which cat\u0026rsquo;s turn it is in bed tonight. I have two cats that don\u0026rsquo;t get along, so they take turns in the bedroom at night. I created this widget to help me remember whose turn it is. At the bottom of the second column reside two indicators that appear when it is within two days of waste and recycling pickup. This is to ensure that I don\u0026rsquo;t forget to take out the trash. logseq.order-list-type:: number\nThe far right column contains a list of scripts to set whole-home light settings, including bright, dim, and dark. It also includes a switch for the outdoor lights, since they don\u0026rsquo;t necessarily fit under any of the other dashboards. logseq.order-list-type:: number\nSpeaking of other dashboards, notice the home, couch, computer, and bed icons on the top navigation bar. Each of these corresponds to a dashboard for a specific room in my house. I won\u0026rsquo;t cover the intricate details of what\u0026rsquo;s on those pages, but each includes controls for individual lighting elements in the room, shortcuts for lighting scenes, and media controls for devices in the room.\nautomation I have many automations set up on my Home Assistant server for multiple purposes. First, a series of automations control lighting in the house based on sunrise and sunset times as well as sunlight levels to maintain the optimal level of light for activity in the house. In addition, I have automations to manage my morning alarm, habit tracking, and location-based changes (turn off TV and lights when home is empty).\nScenes can be defined for further convenience in automating the state of one\u0026rsquo;s home. Each scene is a snapshot of the states of your devices which can be reapplied at will. I have multiple scenes for each room as well as some for specific purposes like writing at my desk, working on a project outside, and more.\ndevices under construction\n","permalink":"http://localhost:1313/pages/home-assistant/","summary":"\u003ch1 id=\"overview\"\u003eoverview\u003c/h1\u003e\n\u003cp\u003e\u003ca href=\"https://www.home-assistant.io/\"\u003eHome Assistant\u003c/a\u003e is essentially a home automation platform designed to be both accessible to users and powerful for enthusiasts. It is hosted on local hardware using software created by \u003ca href=\"https://www.nabucasa.com/\"\u003eNabu Casa\u003c/a\u003e (who also maintain \u003ca href=\"https://esphome.io/index.html\"\u003eESPHome\u003c/a\u003e, a project I fully intend to utilize in the future). Home Assistant boasts a dedicated enterprise community that have developed a robust ecosystem of hardware and software compatible with Home Assistant right out of the box. Furthermore, through the \u003ca href=\"https://hacs.xyz/\"\u003eHome Assistant Community Store\u003c/a\u003e (colloquially HACS), users can install and run custom integrations, add-ons, and UI components created and maintained by Home Assistant\u0026rsquo;s passionate user community.\u003c/p\u003e","title":"Home Assistant"},{"content":"15:09 I want to put more content on this website. Let\u0026rsquo;s flesh out Ada.\n19:37 Add Reading List\n","permalink":"http://localhost:1313/pages/2024-06-30/","summary":"\u003cp\u003e\u003cstrong\u003e15:09\u003c/strong\u003e  I want to put more content on this website. Let\u0026rsquo;s flesh out \u003ca href=\"http://localhost:1313/pages/ada/\"\u003eAda\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e19:37\u003c/strong\u003e  Add \u003ca href=\"http://localhost:1313/pages/reading-list/\"\u003eReading List\u003c/a\u003e\u003c/p\u003e","title":"2024-06-30"},{"content":"Teleology After 5+ years of using Amazon\u0026rsquo;s Alexa and Google\u0026rsquo;s Assistant, I was left unsatisfied. Alexa is annoying at best. Google is constantly removing features from their Assistant. Enter Home Assistant - with its built-in Assist platform, I set out to create a custom, local voice assistant. It is worth noting that HASS announced this year that they are working on their own local/cloud-integrated LLM system. I decided to do this project long before that was announced.\nComposition Currently, Ada is put together using a number of components:\nOpenAI\u0026rsquo;s GPT-4o is the core of the system. Queries are sent via the OpenAI API to be processed by GPT-4o and returned as text.\nOpenAI Whisper runs locally for speech-to-text transcription.\nrHASSpy\u0026rsquo;s Piper model runs locally for text-to-speech transcription.\nText queries are taken in via a number of different interfaces (voice, text, etc) and sent to Whisper for transcription. The transcribed text is formatted and sent to GPT-4o, along with text containing instructions and data regarding the Home Assistant\u0026rsquo;s local devices and their controls. GPT-4o decides on an appropriate action and response, and sends it back to Home Assistant\u0026rsquo;s conversation engine. If a response is generated, it is then turned into audio by Piper and played over the relevant interface, or it is displayed on screen, depending on context.\nCapability Ada is currently capable of dual-mode input: both text and images can be processed dynamically depending on context. At the moment, images must come from either a local file, or a camera stream set up in Home Assistant. I only have one camera (front doorbell), but I intend to change that soon. I plan to install a number of cameras inside the house that Ada can query to gain context about what\u0026rsquo;s happening at home. For example, I would like to be able to ask if the cat\u0026rsquo;s litter box is full, if anyone is home, which pets are where, etc.\nText interaction Ada is capable of parsing complex intents from messages and executing them. See this conversation flow, where Ada correctly describes the status of the front door, even describing change over time. Ada also correctly described the weather for both camera frames as well as the current weather.\n[Ada text input window opened] ada: How can I assist? user: What\u0026#39;s going on at the front door right now? And also tell me the weather. ada: Both images show a view from a front door camera, overlooking a yard with a flag and a car under a blue canopy. In the first image, the weather appears sunny with clear skies, and a person is working on the car. In the second image, the weather is overcast, suggesting recent rain, and the person is not visible. The flag and surroundings remain consistent. The weather outside is currently cloudy. Inspiration The name Ada comes from Ada Lovelace, one of the founders of computer science and one of my personal favorite historical figures.\n","permalink":"http://localhost:1313/pages/ada/","summary":"\u003ch1 id=\"teleology\"\u003eTeleology\u003c/h1\u003e\n\u003cp\u003eAfter 5+ years of using Amazon\u0026rsquo;s Alexa and Google\u0026rsquo;s Assistant, I was left unsatisfied. Alexa is annoying at best. Google is constantly removing features from their Assistant. Enter \u003ca href=\"http://localhost:1313/pages/home-assistant/\"\u003eHome Assistant\u003c/a\u003e - with its built-in Assist platform, I set out to create a custom, local voice assistant. It is worth noting that HASS announced this year that they are working on their own local/cloud-integrated LLM system. I decided to do this project long before that was announced.\u003c/p\u003e","title":"Ada"},{"content":"work in progress\n","permalink":"http://localhost:1313/pages/interstitial-journaling/","summary":"\u003cp\u003ework in progress\u003c/p\u003e","title":"Interstitial Journaling"},{"content":"Since I\u0026rsquo;m getting more into reading these days, I thought it might be interesting to share my reading list.\nin progress cover title rating link to review Fuzzy Logic n/a n/a completed | cover | title | rating | link to review |\nupcoming | cover | title | rating | link to review |\n","permalink":"http://localhost:1313/pages/reading-list/","summary":"\u003cp\u003eSince I\u0026rsquo;m getting more into reading these days, I thought it might be interesting to share my reading list.\u003c/p\u003e\n\u003ch1 id=\"in-progress\"\u003ein progress\u003c/h1\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth style=\"text-align: left\"\u003ecover\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003etitle\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003erating\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003elink to review\u003c/th\u003e\n          \u003cth\u003e\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cimg loading=\"lazy\" src=\"/assets/image_1719791058658_0.png\" alt=\"image.png\"  /\u003e\r\n\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003ca href=\"https://books.google.com/books/about/Fuzzy_Logic.html?id=CM1SAAAAMAAJ\"\u003eFuzzy Logic\u003c/a\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003en/a\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003en/a\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch1 id=\"completed\"\u003ecompleted\u003c/h1\u003e\n\u003cp\u003e| cover | title | rating | link to review |\u003c/p\u003e\n\u003ch1 id=\"upcoming\"\u003eupcoming\u003c/h1\u003e\n\u003cp\u003e| cover | title | rating | link to review |\u003c/p\u003e","title":"Reading List"},{"content":"21:06 Installed #Interstitial Journaling plugin\n21:08 Just had an idea - let\u0026rsquo;s write about Home Assistant and Ada\n","permalink":"http://localhost:1313/pages/2024-06-25/","summary":"\u003cp\u003e\u003cstrong\u003e21:06\u003c/strong\u003e  Installed #\u003ca href=\"http://localhost:1313/pages/interstitial-journaling/\"\u003eInterstitial Journaling\u003c/a\u003e plugin\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e21:08\u003c/strong\u003e  Just had an idea - let\u0026rsquo;s write about \u003ca href=\"http://localhost:1313/pages/home-assistant/\"\u003eHome Assistant\u003c/a\u003e and \u003ca href=\"http://localhost:1313/pages/ada/\"\u003eAda\u003c/a\u003e\u003c/p\u003e","title":"2024-06-25"},{"content":"Hey there! I\u0026rsquo;m Indigo - a computer scientist and engineer hailing from Greenville, South Carolina. I\u0026rsquo;m a quick learner who enjoys taking on new challenges and responsibilities - in a past job, I took responsibility for all computer vision systems on the production line within a month of starting my job, made continuous improvements to their vision and software systems, and achieved a savings of over $500k annually. At my current role at Diesel Laptops, I work on reverse engineering vehicle networks and full-stack software development - C# most of the time, although in my personal work I usually use Python. Outside of work, I\u0026rsquo;ve taken on leadership roles in academic, professional, social, and political organizations throughout my life. In my free time, listening to music, spending time with my friends, and working on my car (2005 Saab 9-2X Aero - if you know you know!). Let\u0026rsquo;s connect!\nWork experience Diesel Laptops LLC - Vehicle Software Engineer Irmo, SC, USA (Remote)\nAugust 2024 - Present\nSpearheaded development of Diesel Laptops’s revolutionary vehicle diagnostics platform Diesel Explorer. Took ownership of - and completed - projects involving vehicle networks (CAN, OBD, WWH, UDS, etc), API services, and customer feature requests. Reverse-engineered manufacturer-specific communication protocols and implemented cost-saving solutions for replacing OEM software tools. Ensured ongoing software evolution, from memory optimization to multithreading to UI improvements. Robert Bosch Inc. – Engineer (Software/AOI) Anderson, SC, USA\nMarch 2023 - August 2024\nTook sole responsibility for all computer vision systems and all related infrastructure in the LTCC production line, utilizing tools from Stratus Vision, Teledyne, ATMO, and our locally-designed LUCA computer vision platform. Performed maintenance and spearheaded ongoing improvement of computer vision systems through projects such as AI implementation, statistical analysis, database management, and more. Provided the department with local support for developing and maintaining software projects involving C++, C#, Python, Excel, R, JavaScript, and MS SQL Server. Led continuous improvement initiatives reducing IDC by over $300k annually. Clemson Computing and Information Technology – IT Technician Clemson, SC, USA\nJanuary 2021 - December 2022\nProvided real-time, in-person A/V system and networking support to university employees and students. Performed hardware and software installs, upgrades, and maintenance across campus. Chick-fil-A – Team Member Cherrydale, SC, USA\nMay 2017 - August 2020\nGranted a great degree of autonomy and trusted to work independently managing a one-of-a-kind Chick-fil-A location. Performed management duties including inventory tracking, forecasting, and order placement, mileage tracking, sales reports, and more. Skills Languages/Frameworks: C, C++, C# (.NET, .NET Core, MVC, EFC), Java, PHP (LAMP), JavaScript, Google Apps Script, HTML, CSS, SQL (MySql, MSSQL), Python (OpenCV, Matplotlib, Eigen), MATLAB, PowerShell, Prolog, OCaml Databases: MySQL, Microsoft SQL Server Tooling: Git, GitLab, Azure DevOps, Postman, Visual Studio, IntelliJ IDEA UI Frameworks: Material UI, TkInter, niceGUI, Qt Other: Scrum, Agile methodologies, Amazon Web Services (EC2, RDS, Elastic Beanstalk), Stratus Vision SPIN/SPINDLE Notable Projects Ada - Smart Home Voice Assistant In-progress project aimed at creating a fully local non-deterministic AI voice assistant capable of answering questions, browsing the web, and controlling home devices (through Home Assistant). Image Classification AI Spearheaded AI project selected for inclusion in executive presentations to German and US Departments of Energy and Bosch Global President, spotlighting over $50K in expected annual savings. Low-Cost Universal Camera Array (LUCA) Helped develop and maintain Bosch’s in-house computer vision system. Gradually took ownership of the project and became the sole developer and maintainer of the project. PDP-11 Instruction Set Simulator Designed a C program that accurately simulates the PDP-11 computer’s assembly language, complete with virtual memory, CPU registers, and a caching system. Input and output are performed via the command line or through files. DriveTime Led a team of five in designing a web application intended to incentivize truck drivers to drive more safely. Utilized C#, CSHMTL, Entity Framework Core, Ebay API, iTunes API, AWS Elastic Beanstalk, AWS EC2, and AWS RDS. Other Leadership Roles IT Liason to Engineering Team 3 (Bosch - 2023-24) Secretary at Clemson Boards (Clemson - 2020-2022) Leader at Chick-fil-A Downtown Greenville (2018-2020) President of the ΗΣΑ National Homeschool Honor Society, ΦΒ chapter (2017-18) Additional Information Completed the Junior Leadership Greenville and Junior Leadership Greer programs. Accumulated hundreds of community service hours through the Honor Society and other opportunities. Completed extracurricular classes in Electric Circuits, Logic \u0026amp; Computing Devices, Systems Programming, MATLAB, and Engineering Concepts. ","permalink":"http://localhost:1313/about/","summary":"about","title":"about indigo"},{"content":"06:14 Write more about Cultivating Knowledge Through Digital Gardenss\nWhat is a knowledge garden?\nZettelkassen\n08:10 I also want to add a page with my contact info and socials. Kind of like a linktree but on my domain and hosted on this site.\n10:38 need to edit Hugo theme so that todo items render correctly\n","permalink":"http://localhost:1313/pages/2024-06-24/","summary":"\u003cp\u003e06:14 Write more about \u003ca href=\"http://localhost:1313/pages/cultivating-knowledge-through-digital-gardens/\"\u003eCultivating Knowledge Through Digital Gardens\u003c/a\u003es\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eWhat is a knowledge garden?\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eZettelkassen\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e08:10 I also want to add a page with my contact info and socials. Kind of like a linktree but on my domain and hosted on this site.\u003c/p\u003e\n\u003cp\u003e10:38 need to edit Hugo theme so that todo items render correctly\u003c/p\u003e","title":"2024-06-24"},{"content":"\rIf a note is not published, does it really exist? - Erwin Schrödinger*\rspores The phrase \u0026ldquo;digital garden\u0026rdquo; is more of an analogy than a descriptive literal. Just as a mushroom garden flourishes from tiny spores into a complex network, a digital garden nurtures small ideas into a rich, interconnected ecosystem of knowledge. Digital gardens are living entities, constantly evolving as they harbor works in progress, nascent ideas, and fleeting thoughts that, over time, grow and intertwine into a robust network of knowledge. Each note in a digital garden starts small. Over time, as the user researches, learns, and grows, they can apply that learning to the note. Through cycles of addition and refinement, these small notes grow into a network of interwoven thoughts and ideas, providing structure and meaning to an otherwise scattered and messy collection of ideas.\ngrafting One of the most significant challenges of maintaining a digital garden is integrating it with one\u0026rsquo;s life in a way that is both seamless and practical. Many attempts have been made throughout history to bridge this gap - consider the commonplace book, a method documented as early as 40 BC by Andronicus of Rhodes in Topics, his compilation of works by Aristotle on the subject of logic. To this day, balancing convenience with functionality remains a struggle. One of my favorite ways of integrating my knowledge base into my life is interstitial journaling. In essence, the idea is to write one\u0026rsquo;s thoughts whenever one has them, along with a timestamp. Then, later, when one has the time and energy, they can expound more on their earlier thoughts. Using this method helps me keep everything organized (one page for every day, organized chronologically) while still being easy to use and navigate.\nmycelium Thus far, if one has been following along with the methods described in this page, one will end up with a messy pile of unrelated notes. Without structure, a collection of notes can resemble a chaotic tangle. Structure can be imposed upon the notes via categorization, but that is work-intensive and can eventually grow to beyond what one can reasonably manage (one could call this the brute force method). A more elegant way of generating structure in one\u0026rsquo;s knowledge is to connect ideas together. By finding the common themes in one\u0026rsquo;s notes, their collection can morph from a disorganized mess into an elegant, navigable system. One method of keeping track of linkages between ideas and topics is Zettelkasten, a personal knowledge management system pioneered by Conrad Gessner in the 1500s. By creating unique identifiers (think URIs) for each note, they can be succinctly referenced by other notes, indexed, and organized with ease. Linking one\u0026rsquo;s notes in such a way enables one to see the greater structure to their knowledge - that is, by seeing the common threads that connect our thoughts, we can begin to understand ourselves and our knowledge even better.\nsuperposition Think back to the quote at the beginning of this article and consider Schrödinger\u0026rsquo;s cat - an analogy for the state of unshared knowledge. If knowledge remains unseen, does it truly contribute to the world? Sharing through digital gardens not only validates our thoughts but also invites others to expand and evolve them, fostering a collective growth of understanding. I decided to share my knowledge with the world through digital garden, so that others can hopefully learn to grow their own.\nread more: What is a digital garden? Danielle Messler\nErwin Schrodinger\nInterstitial Journaling | indi.bio\n*This is not a real quote. It\u0026rsquo;s a joke about superposition and note taking.\n","permalink":"http://localhost:1313/pages/cultivating-knowledge-through-digital-gardens/","summary":"\u003cblockquote class=\"hint \"\u003e\r\n    If a note is not published, does it really exist?\n\u003cem\u003e- Erwin Schrödinger\u003c/em\u003e*\r\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/assets/mushrooms-2743051_1280_1719269204314_0.jpg\" alt=\"mushrooms-2743051_1280.jpg\"  /\u003e\r\n\u003c/p\u003e\n\u003ch1 id=\"spores\"\u003espores\u003c/h1\u003e\n\u003cp\u003eThe phrase \u0026ldquo;digital garden\u0026rdquo; is more of an analogy than a descriptive literal. Just as a mushroom garden flourishes from tiny spores into a complex network, a digital garden nurtures small ideas into a rich, interconnected ecosystem of knowledge. Digital gardens are living entities, constantly evolving as they harbor works in progress, nascent ideas, and fleeting thoughts that, over time, grow and intertwine into a robust network of knowledge. Each note in a digital garden starts small. Over time, as the user researches, learns, and grows, they can apply that learning to the note. Through cycles of addition and refinement, these small notes grow into a network of interwoven thoughts and ideas, providing structure and meaning to an otherwise scattered and messy collection of ideas.\u003c/p\u003e","title":"Cultivating Knowledge Through Digital Gardens"},{"content":"09:12 I need to refactor the code for this website and improve the content. There’s not really anything worth reading on it at the moment and I want to change that. I have lots of ideas, but every time I sit down to write at my computer I don’t feel motivated to make content. How can I fix that?\nChange name from archive to something else\nRewrite description block\nAdd images\nSimplify navigation\nindigo.wiki is expensive\ni got indi.bio!\nChange title of ‘archive’ in search bar to resolve confusion\nCreate tagging system? Seems a bit redundant with categories as well\nCould change categories to be a bit more obfuscated e.g.:\ncontent\njournal\nmeta\nother stuff??\nThen create tags like\ncode\nblog\netc\n09:32 Re-export via schrodinger to DONE Check if \u0026lt;% today %\u0026gt; macro works for hugo ssg as well as check if the block link inside this block works\n","permalink":"http://localhost:1313/pages/2024-06-23/","summary":"\u003cp\u003e09:12 I need to refactor the code for this website and improve the content. There’s not really anything worth reading on it at the moment and I want to change that. I have lots of ideas, but every time I sit down to write at my computer I don’t feel motivated to make content. How can I fix that?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eChange name from archive to something else\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eRewrite description block\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eAdd images\u003c/p\u003e","title":"2024-06-23"},{"content":"I\u0026rsquo;ve done a few projects recently, and I want to add them to the site\nLet\u0026rsquo;s pause and zoom out for a sec - I don\u0026rsquo;t like the structure of this graph. It doesn\u0026rsquo;t work well with the way I\u0026rsquo;ve structured my Hugo templates.\nMove to Graph Structure\nGraph Rendering\n","permalink":"http://localhost:1313/pages/2024-02-18/","summary":"\u003cp\u003eI\u0026rsquo;ve done a few projects recently, and I want to add them to the site\u003c/p\u003e\n\u003cp\u003eLet\u0026rsquo;s pause and zoom out for a sec - I don\u0026rsquo;t like the structure of this graph. It doesn\u0026rsquo;t work well with the way I\u0026rsquo;ve structured my Hugo templates.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eMove to \u003ca href=\"http://localhost:1313/pages/graph-structure/\"\u003eGraph Structure\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"http://localhost:1313/pages/graph-rendering/\"\u003eGraph Rendering\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","title":"2024-02-18"},{"content":"Project goals: Create an interactive \u0026ldquo;graph view\u0026rdquo; of this website to display on its homepage.\nMake it compatible with github pages and hugo\u0026rsquo;s static site specifications.\nResearch: Plotly with Hugo\nLogseq codebase overview\nArticle on logseq codebase structure\nLogseq built-in renderer\nCosma | Installing Cosma (arthurperret.fr)\nLogseq Graph Analysis plugin\nDevelopment themes/PaperModlayouts/partials/home_info.html is the template for my home page\nI need to figure out how to render a graph in this page\nJavaScript parser returns map containing all links\nMap contents:\n+ JavaScript renderer renders everything ","permalink":"http://localhost:1313/pages/graph-rendering/","summary":"\u003ch3 id=\"project-goals\"\u003eProject goals:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eCreate an interactive \u0026ldquo;graph view\u0026rdquo; of this website to display on its homepage.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eMake it compatible with github pages and hugo\u0026rsquo;s static site specifications.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"research\"\u003eResearch:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://mertbakir.gitlab.io/hugo/plotly-with-hugo/\"\u003ePlotly with Hugo\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/logseq/logseq/blob/master/CODEBASE_OVERVIEW.md\"\u003eLogseq codebase overview\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://docs.logseq.com/#/page/The%20Refactoring%20Of%20Logseq\"\u003eArticle on logseq codebase structure\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/logseq/logseq/blob/master/src/main/frontend/extensions/graph/pixi.cljs\"\u003eLogseq built-in renderer\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://cosma.arthurperret.fr/installing.html\"\u003eCosma | Installing Cosma (arthurperret.fr)\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/trashhalo/logseq-graph-analysis/blob/main/src/main.ts\"\u003eLogseq Graph Analysis plugin\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"development\"\u003eDevelopment\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003ethemes/PaperModlayouts/partials/home_info.html\u003c/code\u003e is the template for my home page\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eI need to figure out how to render a graph in this page\u003c/p\u003e","title":"Graph Rendering"},{"content":"Description: This is the collection of my code projects that I\u0026rsquo;ve done over the years.\nProject List: PDP-11 Instruction Set Simulator: PDP-11 Instruction Set Simulator\nDriveTime: DriveTime\nImage Classification AI: Image Classification AI\nLow-Cost Universal Camera Array: LUCA\nArchive website (the website you\u0026rsquo;re on)\nHomepage graph view: Graph Rendering ","permalink":"http://localhost:1313/pages/code-projects/","summary":"\u003ch3 id=\"description\"\u003eDescription:\u003c/h3\u003e\n\u003cp\u003eThis is the collection of my code projects that I\u0026rsquo;ve done over the years.\u003c/p\u003e\n\u003ch3 id=\"project-list\"\u003eProject List:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003ePDP-11 Instruction Set Simulator: \u003ca href=\"http://localhost:1313/pages/pdp-11-instruction-set-simulator/\"\u003ePDP-11 Instruction Set Simulator\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDriveTime: \u003ca href=\"http://localhost:1313/pages/drivetime/\"\u003eDriveTime\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eImage Classification AI: \u003ca href=\"http://localhost:1313/pages/image-classification-ai/\"\u003eImage Classification AI\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eLow-Cost Universal Camera Array: \u003ca href=\"http://localhost:1313/pages/luca/\"\u003eLUCA\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eArchive website (the website you\u0026rsquo;re on)\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eHomepage graph view: \u003ca href=\"http://localhost:1313/pages/graph-rendering/\"\u003eGraph Rendering\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","title":"Code Projects"},{"content":"Flesh out this page later\n#Diaries is the tag that I will use to denote a diary entry.\n","permalink":"http://localhost:1313/pages/diaries/","summary":"\u003cp\u003eFlesh out this page later\u003c/p\u003e\n\u003cp\u003e#Diaries is the tag that I will use to denote a diary entry.\u003c/p\u003e","title":"Diaries"},{"content":"DriveTime is a web application intended to incentivize truck drivers to drive more safely. It is built with C#, CSHMTL, Entity Framework Core, Ebay API, iTunes API, AWS Elastic Beanstalk, AWS EC2, and AWS RDS.\n","permalink":"http://localhost:1313/pages/drivetime/","summary":"\u003cp\u003eDriveTime is a web application intended to incentivize truck drivers to drive more safely. It is built with C#, CSHMTL, Entity Framework Core, Ebay API, iTunes API, AWS Elastic Beanstalk, AWS EC2, and AWS RDS.\u003c/p\u003e","title":"DriveTime"},{"content":"I created an AI for automated classification of production line quality control images on Stratus Vision AOI systems. I identified key areas of application and improvement, and performed ongoing fine-tuning and maintenance to the model based on various metrics.\n","permalink":"http://localhost:1313/pages/image-classification-ai/","summary":"\u003cp\u003eI created an AI for automated classification of production line quality control images on Stratus Vision AOI systems. I identified key areas of application and improvement, and performed ongoing fine-tuning and maintenance to the model based on various metrics.\u003c/p\u003e","title":"Image Classification AI"},{"content":"Helped develop and maintain Bosch’s in-house computer vision system. Gradually took ownership of the project and became the sole developer and maintainer of the project.\nThe system is built from a raspberry pi, 8 NVidia Jetson Nano boards, and 16 high-resolution cameras. The cameras are attached to a 3-axis mount controlled by 3 servo motors. LED lighting strips were added later to the inside of the machine in order to add the ability to customize lighting.\n","permalink":"http://localhost:1313/pages/luca/","summary":"\u003cp\u003eHelped develop and maintain Bosch’s in-house computer vision system. Gradually took ownership of the project and became the sole developer and maintainer of the project.\u003c/p\u003e\n\u003cp\u003eThe system is built from a raspberry pi, 8 NVidia Jetson Nano boards, and 16 high-resolution cameras. The cameras are attached to a 3-axis mount controlled by 3 servo motors. LED lighting strips were added later to the inside of the machine in order to add the ability to customize lighting.\u003c/p\u003e","title":"LUCA"},{"content":"Description: This is a C program that accurately simulates the PDP-11 computer\u0026rsquo;s assembly language, complete with virtual memory, CPU registers, and a caching system. Input and output are performed through the command line or through files. Instruction Set: The PDP-11 instruction set contains 12 basic operations to be performed on memory addresses. Operands are represented by 16-bit words, with the leftmost bits containing the opcode and the rightmost bits containing source, destination, and register addresses. In addition, many other operands are supported, allowing for a wide variety of operations to be performed.\nArchitecture: The PDP-11 architecture is a 16-bit instruction set architecture developed by Digital Equipment Corporation for use with PDP-11 computers. It was widely used in the 1970s, but grew less popular in the 1980s and afterwards.\nMemory Memory is represented by 16-bit words in little-endian format. The smallest addressable unit of memory is 8 bits. Registers R0-R7 can each store one word, which points to a location in the computer\u0026rsquo;s 64KB of memory. Low memory addresses are reserved for two-word vectors that serve as places to store the program counter and processor status.\nCPU Registers The PDP-11 contains eight general-purpose 16-bit registers (R0-R7). Register R7 stores the program counter. Other registers have common but not universal use cases.\nAddressing Modes The PDP-11 computer uses eight \u0026ldquo;addressing modes\u0026rdquo;. Each addressing mode alters the operation of the registers as shown in the following chart.\nCode Name Example Description 0n Register Rn The operand is in Rn. 1n Register deferred (Rn) Rn contains the address of the operand. 2n Autoincrement (Rn)+ Rn contains the address of the operand, then increment Rn. 3n Autoincrement deferred @(Rn)+ Rn contains the address of the address of the operand, then increment Rn by 2. 4n Autodecrement -(Rn) Decrement Rn, then use the result as the address of the operand. 5n Autodecrement deferred @-(Rn) Decrement Rn by 2, then use the result as the address of the address of the operand. 6n Index X(Rn) Rn+X is the address of the operand. 7n Index deferred @X(Rn) Rn+X is the address of the address of the operand. The Program Counter has four addressing modes, and the Stack has 6 addressing modes, both of which alter the operation of the system in their own way.\nCode Breakdown: Memory addresses are stored in the following structure:\nint mode stores the operating mode.\nint reg stores the register on which the operation is being performed.\nint addr stores addresses relevant to modes 1-7.\nint value stores a relevant value.\n/* struct to help organize source and destination operand handling */ typedef struct ap { int mode; int reg; int addr; /* used only for modes 1-7 */ int value; } addr_phrase_t; The following global variables are defined:\nuint16_t memory[MEMSIZE] represents the simulated global memory, segregated into 16-bit chunks. MEMSIZE is a predefined variable that determines the amount of memory available to the system.\nuint16_t reg[8] represents the 8 CPU registers, each capable of storing one 16-bit word.\nbool n, z, v, c are single-bit condition codes used to indicate the status of the system.\nAll other global variables are used for statistics purposes and do not affect the operation of the system.\n// Global variables uint16_t memory[MEMSIZE]; // 16-bit memory uint16_t reg[8] = {0}; // R0-R7 bool n, z, v, c; // Condition codes addr_phrase_t src, dst; // Source and destination address phrases bool running; // Flag to indicate if the program is running bool trace = false; bool verbose = false; int memory_reads = 0; int memory_writes = 0; int inst_fetches = 0; int inst_execs = 0; int branch_taken = 0; int branch_execs = 0; The following functions are defined:\noperate() takes a 16-bit instruction as its input, interprets it, and performs the corresponding action.\nget_operand(), update_operand(), and put_operand() all modify the operand.\npstats() and pregs() are defined for development purposes - they print statistics and the values of the registers, respectively.\nThe full code for each of these functions can be seen in the project\u0026rsquo;s GitHub Repository\n// Function prototypes void operate(uint16_t instruction); void get_operand(addr_phrase_t *phrase); void update_operand(addr_phrase_t *phrase); void put_operand(addr_phrase_t *phrase); void add(uint16_t operand); void asl(uint16_t operand); void asr(uint16_t operand); void beq(uint16_t operand); void bne(uint16_t operand); void br(uint16_t operand); void cmp(uint16_t operand); void halt(uint16_t operand); void mov(uint16_t operand); void sob(uint16_t operand); void sub(uint16_t operand); void pstats(); void pregs(); Links GitHub Repository\nWhat the heck is a PDP-11?\nPDP-11 Instruction Set\n","permalink":"http://localhost:1313/pages/pdp-11-instruction-set-simulator/","summary":"\u003ch3 id=\"description\"\u003eDescription:\u003c/h3\u003e\n\u003cp\u003eThis is a C program that accurately simulates the PDP-11 computer\u0026rsquo;s assembly language, complete with virtual memory, CPU registers, and a caching system. Input and output are performed through the command line or through files.\n\u003cimg loading=\"lazy\" src=\"https://cdn.arstechnica.net/wp-content/uploads/2013/10/unix-creators.jpg\" alt=\"A brief tour of the PDP-11, the most influential minicomputer of all time |  Ars Technica\"  /\u003e\r\n\u003c/p\u003e\n\u003ch3 id=\"instruction-set\"\u003eInstruction Set:\u003c/h3\u003e\n\u003cp\u003eThe PDP-11 instruction set contains 12 basic operations to be performed on memory addresses. Operands are represented by 16-bit words, with the leftmost bits containing the opcode and the rightmost bits containing source, destination, and register addresses. In addition, many other operands are supported, allowing for a wide variety of operations to be performed.\u003c/p\u003e","title":"PDP-11 Instruction Set Simulator"},{"content":"This is my first page! I intend to use journals (pages titled with a date) as working spaces. All actual content should be on its own page.\nThings to note when working on this site:\nLogseq-schrodinger uses YAML for the Hugo front-matter. It will convert Logseq page-properties to Hugo front matter.\nLogseq keywords are lowercase converted to Hugo keywords, and category in Logseq is translated to categories for use with Hugo. Logseq links ([[like_this]]) are stripped of [[ and ]].\nAll other keywords are just converted to Hugo keywords.\nFor now you must add date with the posts date in the form of \u0026ldquo;2012-04-06\u0026rdquo; to your Logseq page-properties.\nExample - date:: 2012-04-06\nI need a part of this graph that I can use to put structural data.\nGraph Structure I would also like a place to remind myself how to deploy.\nDeployment Templates, too.\nTemplates ","permalink":"http://localhost:1313/pages/2024-01-20/","summary":"\u003cp\u003eThis is my first page! I intend to use journals (pages titled with a date) as working spaces. All actual content should be on its own page.\u003c/p\u003e\n\u003cp\u003eThings to note when working on this site:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eLogseq-schrodinger uses YAML for the Hugo \u003ca href=\"https://gohugo.io/content-management/front-matter/\"\u003efront-matter\u003c/a\u003e. It will convert Logseq page-properties to Hugo front matter.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eLogseq \u003cem\u003ekeywords\u003c/em\u003e are lowercase converted to Hugo keywords, and \u003cstrong\u003ecategory\u003c/strong\u003e in Logseq is translated to \u003cem\u003ecategories\u003c/em\u003e for use with Hugo. Logseq \u003cem\u003elinks\u003c/em\u003e (\u003ccode\u003e[[like_this]]\u003c/code\u003e) are stripped of \u003ccode\u003e[[\u003c/code\u003e and \u003ccode\u003e]]\u003c/code\u003e.\u003c/p\u003e","title":"2024-01-20"},{"content":"How to deploy to this site: From Logseq, use schrodinger to export all public pages.\nUnzip the new archive and move the new \u0026lsquo;pages\u0026rsquo; folder into tealblu.github.io/content.\nMay also need to copy the \u0026lsquo;assets\u0026rsquo; folder from the /logseq/ directory to the /content/ directory. Inside tealblu.github.io, open a terminal and run hugo\nCreate a new commit and push to the remote graph.\nWait a few minutes for Github Actions to run.\nDone!\n{{embed [[deployment flow]]}}\n","permalink":"http://localhost:1313/pages/deployment/","summary":"\u003ch3 id=\"how-to-deploy-to-this-site\"\u003eHow to deploy to this site:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eFrom Logseq, use schrodinger to export all public pages.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUnzip the new archive and move the new \u0026lsquo;pages\u0026rsquo; folder into tealblu.github.io/content.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eMay also need to copy the \u0026lsquo;assets\u0026rsquo; folder from the \u003ccode\u003e/logseq/\u003c/code\u003e directory to the \u003ccode\u003e/content/\u003c/code\u003e directory.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eInside tealblu.github.io, open a terminal and run \u003ccode\u003ehugo\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eCreate a new commit and push to the remote graph.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWait a few minutes for Github Actions to run.\u003c/p\u003e","title":"Deployment"},{"content":"Current graph state: Structure Specification: Architecture The graph should consist of multiple hub-and-spoke structures.\nThe \u0026ldquo;hubs\u0026rdquo; in this system will be called root pages.\nThe \u0026ldquo;spokes\u0026rdquo; in this system will be called child pages.\nGuidelines Any block larger than one paragraph (subjective) should be its own page.\nAny page longer than two full screens should be split up.\nFull sentences should be used when possible.\nNo orphan pages should ever be pushed to production.\nAll root pages should have a category.\nNo child pages should have a category.\nGraph Development Process: What am I doing? I am figuring out how to structure this graph.\ngraph: a structured collection of data consisting of interlinked nodes\rI am defining a structure now so that it stays organized as it grows.\nJust a few simple rules can turn chaos into order.\rRules should be short and simple.\nRules should be easy to understand.\nWhy am I doing it? As stated above, so that the graph stays organized as it grows.\nThis graph is my public \u0026ldquo;knowledge garden\u0026rdquo;, so I would like it to be as accessible to others as possible.\nWhat are my rules? Any block larger than one paragraph (subjective) should be its own page.\nAny page longer than two full screens should be split up.\nFull sentences should be used when possible.\nNo orphan pages should ever be pushed to production.\nAll root pages should have a category.\nNo child pages should have a category.\n","permalink":"http://localhost:1313/pages/graph-structure/","summary":"\u003ch2 id=\"current-graph-state\"\u003eCurrent graph state:\u003c/h2\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/assets/image_1708273581197_0.png\" alt=\"image.png\"  /\u003e\r\n\u003c/p\u003e\n\u003ch2 id=\"structure-specification\"\u003eStructure Specification:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ch3 id=\"architecture\"\u003eArchitecture\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eThe graph should consist of multiple hub-and-spoke structures.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThe \u0026ldquo;hubs\u0026rdquo; in this system will be called \u003cstrong\u003eroot pages\u003c/strong\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThe \u0026ldquo;spokes\u0026rdquo; in this system will be called \u003cstrong\u003echild pages\u003c/strong\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ch3 id=\"guidelines\"\u003eGuidelines\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eAny block larger than one paragraph (subjective) should be its own page.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eAny page longer than two full screens should be split up.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFull sentences should be used when possible.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eNo orphan pages should \u003cem\u003eever\u003c/em\u003e be pushed to production.\u003c/p\u003e","title":"Graph Structure"},{"content":"What kind of projects do I do? I\u0026rsquo;m interested in a lot of different stuff! This collection will hopefully become an archive of my various projects, both for my personal reference and to document for future employment purposes. The types of projects here will include:\nCode, programming, and related projects -\u0026gt; Code Projects\nDIY stuff\nMusic\nAnd potentially more\u0026hellip;\n","permalink":"http://localhost:1313/pages/projects-homepage/","summary":"\u003ch3 id=\"what-kind-of-projects-do-i-do\"\u003eWhat kind of projects do I do?\u003c/h3\u003e\n\u003cp\u003eI\u0026rsquo;m interested in a lot of different stuff! This collection will hopefully become an archive of my various projects, both for my personal reference and to document for future employment purposes. The types of projects here will include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eCode, programming, and related projects -\u0026gt; \u003ca href=\"http://localhost:1313/pages/code-projects/\"\u003eCode Projects\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDIY stuff\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eMusic\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eAnd potentially more\u0026hellip;\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","title":"Projects Homepage"},{"content":"Templates can be used to provide structure to an otherwise unstructured graph. They are relatively self-explanatory - by using a slash command (/template), I can choose which template I want and then paste it anywhere in the file that I have open.\nFor more information, check the official Logseq documentation. metadata template:: metadata template-including-parent:: false\ndate:: YYYY-MM-DD category:: keywords:: public:: true diary template:: diary template-including-parent:: false\n#Diaries \u0026lt;% today %\u0026gt; \u0026lt;% time %\u0026gt;: ","permalink":"http://localhost:1313/pages/templates/","summary":"\u003cp\u003eTemplates can be used to provide structure to an otherwise unstructured graph. They are relatively self-explanatory - by using a slash command (\u003ccode\u003e/template\u003c/code\u003e), I can choose which template I want and then paste it anywhere in the file that I have open.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFor more information, check the \u003ca href=\"https://hub.logseq.com/features/av5LyiLi5xS7EFQXy4h4K8/how-to-create-and-use-templates-in-logseq/uiwhKfyFJrG7mdrkopjuAG\"\u003eofficial Logseq documentation\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003emetadata\ntemplate:: metadata\ntemplate-including-parent:: false\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003edate:: YYYY-MM-DD\ncategory::\nkeywords::\npublic:: true\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003ediary\ntemplate:: diary\ntemplate-including-parent:: false\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e#Diaries \u0026lt;% today %\u0026gt; \u0026lt;% time %\u0026gt;:\u003c/li\u003e\n\u003c/ul\u003e","title":"Templates"},{"content":"I want to write about my code projects. Where can I do that?\nCode Projects #Diaries 2024-01-21 20:55: The internet is such a cool thing. I spent today working on my website and home automation stuff, and now I\u0026rsquo;m hanging out with my best friends on Discord. We live thousands of miles away, yet we can chat as if we were sitting next to each other. Each day I wake up grateful that I was born in the 21st century.\n","permalink":"http://localhost:1313/pages/2024-01-21/","summary":"\u003cp\u003eI want to write about my code projects. Where can I do that?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"http://localhost:1313/pages/code-projects/\"\u003eCode Projects\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e#Diaries \u003ca href=\"http://localhost:1313/pages/2024-01-21/\"\u003e2024-01-21\u003c/a\u003e 20:55: The internet is such a cool thing. I spent today working on my website and home automation stuff, and now I\u0026rsquo;m hanging out with my best friends on Discord. We live thousands of miles away, yet we can chat as if we were sitting next to each other. Each day I wake up grateful that I was born in the 21st century.\u003c/p\u003e","title":"2024-01-21"},{"content":"14:33 it\u0026rsquo;s valentines day! i\u0026rsquo;m updating my about page to reflect recent changes\n","permalink":"http://localhost:1313/pages/2025-02-14/","summary":"\u003cp\u003e14:33  it\u0026rsquo;s valentines day! i\u0026rsquo;m updating my about page to reflect recent changes\u003c/p\u003e","title":"2025-02-14"},{"content":"overview Home Assistant is essentially a home automation platform designed to be both accessible to users and powerful for enthusiasts. It is hosted on local hardware using software created by Nabu Casa (who also maintain ESPHome, a project I fully intend to utilize in the future). Home Assistant boasts a dedicated enterprise community that have developed a robust ecosystem of hardware and software compatible with Home Assistant right out of the box. Furthermore, through the Home Assistant Community Store (colloquially HACS), users can install and run custom integrations, add-ons, and UI components created and maintained by Home Assistant\u0026rsquo;s passionate user community.\nMy personal Home Assistant setup runs off of an old Dell Precision 5520 laptop that I used in college. The laptop\u0026rsquo;s dedicated NVidia Quadro graphics card enables me to run local, high-intensive computing projects including AI and machine learning (more on that later). Nabu Casa\u0026rsquo;s custom OS, HASS, is installed directly on the hardware, which enables tighter integration with the host system\u0026rsquo;s hardware capabilities (something the containerized version of the software doesn\u0026rsquo;t support).\nuser interface Home Assistant maintains a local server that, among other things, hosts the lovelace dashboard. Upon first opening, the user is greeted with a login screen. Assuming authentication succeeds, the above home page is displayed to the user. Immediately, multiple features can be noticed:\nFront Door Snapshot is a continuous feed of snapshots from my front door camera on 3-second intervals. This allows me to quickly get a good idea of the conditions at home (such as weather, packages, etc - currently, my car is semi-disassembled in the driveway). Below the front door image, I have configured a dashboard to display data from a free weather API maintained by Meteorologisk institutt as well as information on sunrise, sunset, moon phase, and more. logseq.order-list-type:: number\nAt the top of the second column are buttons to interact with Ada via voice or via text. Below the Ada buttons, I created a dashboard to display my and my partner\u0026rsquo;s statuses, including location (anonymized by named locations), battery percentage and status, and connectivity status. Beneath the status dashboard is an integration to display which cat\u0026rsquo;s turn it is in bed tonight. I have two cats that don\u0026rsquo;t get along, so they take turns in the bedroom at night. I created this widget to help me remember whose turn it is. At the bottom of the second column reside two indicators that appear when it is within two days of waste and recycling pickup. This is to ensure that I don\u0026rsquo;t forget to take out the trash. logseq.order-list-type:: number\nThe far right column contains a list of scripts to set whole-home light settings, including bright, dim, and dark. It also includes a switch for the outdoor lights, since they don\u0026rsquo;t necessarily fit under any of the other dashboards. logseq.order-list-type:: number\nSpeaking of other dashboards, notice the home, couch, computer, and bed icons on the top navigation bar. Each of these corresponds to a dashboard for a specific room in my house. I won\u0026rsquo;t cover the intricate details of what\u0026rsquo;s on those pages, but each includes controls for individual lighting elements in the room, shortcuts for lighting scenes, and media controls for devices in the room.\nautomation I have many automations set up on my Home Assistant server for multiple purposes. First, a series of automations control lighting in the house based on sunrise and sunset times as well as sunlight levels to maintain the optimal level of light for activity in the house. In addition, I have automations to manage my morning alarm, habit tracking, and location-based changes (turn off TV and lights when home is empty).\nScenes can be defined for further convenience in automating the state of one\u0026rsquo;s home. Each scene is a snapshot of the states of your devices which can be reapplied at will. I have multiple scenes for each room as well as some for specific purposes like writing at my desk, working on a project outside, and more.\ndevices under construction\n","permalink":"http://localhost:1313/pages/home-assistant/","summary":"\u003ch1 id=\"overview\"\u003eoverview\u003c/h1\u003e\n\u003cp\u003e\u003ca href=\"https://www.home-assistant.io/\"\u003eHome Assistant\u003c/a\u003e is essentially a home automation platform designed to be both accessible to users and powerful for enthusiasts. It is hosted on local hardware using software created by \u003ca href=\"https://www.nabucasa.com/\"\u003eNabu Casa\u003c/a\u003e (who also maintain \u003ca href=\"https://esphome.io/index.html\"\u003eESPHome\u003c/a\u003e, a project I fully intend to utilize in the future). Home Assistant boasts a dedicated enterprise community that have developed a robust ecosystem of hardware and software compatible with Home Assistant right out of the box. Furthermore, through the \u003ca href=\"https://hacs.xyz/\"\u003eHome Assistant Community Store\u003c/a\u003e (colloquially HACS), users can install and run custom integrations, add-ons, and UI components created and maintained by Home Assistant\u0026rsquo;s passionate user community.\u003c/p\u003e","title":"Home Assistant"},{"content":"15:09 I want to put more content on this website. Let\u0026rsquo;s flesh out Ada.\n19:37 Add Reading List\n","permalink":"http://localhost:1313/pages/2024-06-30/","summary":"\u003cp\u003e\u003cstrong\u003e15:09\u003c/strong\u003e  I want to put more content on this website. Let\u0026rsquo;s flesh out \u003ca href=\"http://localhost:1313/pages/ada/\"\u003eAda\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e19:37\u003c/strong\u003e  Add \u003ca href=\"http://localhost:1313/pages/reading-list/\"\u003eReading List\u003c/a\u003e\u003c/p\u003e","title":"2024-06-30"},{"content":"Teleology After 5+ years of using Amazon\u0026rsquo;s Alexa and Google\u0026rsquo;s Assistant, I was left unsatisfied. Alexa is annoying at best. Google is constantly removing features from their Assistant. Enter Home Assistant - with its built-in Assist platform, I set out to create a custom, local voice assistant. It is worth noting that HASS announced this year that they are working on their own local/cloud-integrated LLM system. I decided to do this project long before that was announced.\nComposition Currently, Ada is put together using a number of components:\nOpenAI\u0026rsquo;s GPT-4o is the core of the system. Queries are sent via the OpenAI API to be processed by GPT-4o and returned as text.\nOpenAI Whisper runs locally for speech-to-text transcription.\nrHASSpy\u0026rsquo;s Piper model runs locally for text-to-speech transcription.\nText queries are taken in via a number of different interfaces (voice, text, etc) and sent to Whisper for transcription. The transcribed text is formatted and sent to GPT-4o, along with text containing instructions and data regarding the Home Assistant\u0026rsquo;s local devices and their controls. GPT-4o decides on an appropriate action and response, and sends it back to Home Assistant\u0026rsquo;s conversation engine. If a response is generated, it is then turned into audio by Piper and played over the relevant interface, or it is displayed on screen, depending on context.\nCapability Ada is currently capable of dual-mode input: both text and images can be processed dynamically depending on context. At the moment, images must come from either a local file, or a camera stream set up in Home Assistant. I only have one camera (front doorbell), but I intend to change that soon. I plan to install a number of cameras inside the house that Ada can query to gain context about what\u0026rsquo;s happening at home. For example, I would like to be able to ask if the cat\u0026rsquo;s litter box is full, if anyone is home, which pets are where, etc.\nText interaction Ada is capable of parsing complex intents from messages and executing them. See this conversation flow, where Ada correctly describes the status of the front door, even describing change over time. Ada also correctly described the weather for both camera frames as well as the current weather.\n[Ada text input window opened] ada: How can I assist? user: What\u0026#39;s going on at the front door right now? And also tell me the weather. ada: Both images show a view from a front door camera, overlooking a yard with a flag and a car under a blue canopy. In the first image, the weather appears sunny with clear skies, and a person is working on the car. In the second image, the weather is overcast, suggesting recent rain, and the person is not visible. The flag and surroundings remain consistent. The weather outside is currently cloudy. Inspiration The name Ada comes from Ada Lovelace, one of the founders of computer science and one of my personal favorite historical figures.\n","permalink":"http://localhost:1313/pages/ada/","summary":"\u003ch1 id=\"teleology\"\u003eTeleology\u003c/h1\u003e\n\u003cp\u003eAfter 5+ years of using Amazon\u0026rsquo;s Alexa and Google\u0026rsquo;s Assistant, I was left unsatisfied. Alexa is annoying at best. Google is constantly removing features from their Assistant. Enter \u003ca href=\"http://localhost:1313/pages/home-assistant/\"\u003eHome Assistant\u003c/a\u003e - with its built-in Assist platform, I set out to create a custom, local voice assistant. It is worth noting that HASS announced this year that they are working on their own local/cloud-integrated LLM system. I decided to do this project long before that was announced.\u003c/p\u003e","title":"Ada"},{"content":"work in progress\n","permalink":"http://localhost:1313/pages/interstitial-journaling/","summary":"\u003cp\u003ework in progress\u003c/p\u003e","title":"Interstitial Journaling"},{"content":"Since I\u0026rsquo;m getting more into reading these days, I thought it might be interesting to share my reading list.\nin progress cover title rating link to review Fuzzy Logic n/a n/a completed | cover | title | rating | link to review |\nupcoming | cover | title | rating | link to review |\n","permalink":"http://localhost:1313/pages/reading-list/","summary":"\u003cp\u003eSince I\u0026rsquo;m getting more into reading these days, I thought it might be interesting to share my reading list.\u003c/p\u003e\n\u003ch1 id=\"in-progress\"\u003ein progress\u003c/h1\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth style=\"text-align: left\"\u003ecover\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003etitle\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003erating\u003c/th\u003e\n          \u003cth style=\"text-align: left\"\u003elink to review\u003c/th\u003e\n          \u003cth\u003e\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003cimg loading=\"lazy\" src=\"/assets/image_1719791058658_0.png\" alt=\"image.png\"  /\u003e\r\n\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003e\u003ca href=\"https://books.google.com/books/about/Fuzzy_Logic.html?id=CM1SAAAAMAAJ\"\u003eFuzzy Logic\u003c/a\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003en/a\u003c/td\u003e\n          \u003ctd style=\"text-align: left\"\u003en/a\u003c/td\u003e\n          \u003ctd\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch1 id=\"completed\"\u003ecompleted\u003c/h1\u003e\n\u003cp\u003e| cover | title | rating | link to review |\u003c/p\u003e\n\u003ch1 id=\"upcoming\"\u003eupcoming\u003c/h1\u003e\n\u003cp\u003e| cover | title | rating | link to review |\u003c/p\u003e","title":"Reading List"},{"content":"21:06 Installed #Interstitial Journaling plugin\n21:08 Just had an idea - let\u0026rsquo;s write about Home Assistant and Ada\n","permalink":"http://localhost:1313/pages/2024-06-25/","summary":"\u003cp\u003e\u003cstrong\u003e21:06\u003c/strong\u003e  Installed #\u003ca href=\"http://localhost:1313/pages/interstitial-journaling/\"\u003eInterstitial Journaling\u003c/a\u003e plugin\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003e21:08\u003c/strong\u003e  Just had an idea - let\u0026rsquo;s write about \u003ca href=\"http://localhost:1313/pages/home-assistant/\"\u003eHome Assistant\u003c/a\u003e and \u003ca href=\"http://localhost:1313/pages/ada/\"\u003eAda\u003c/a\u003e\u003c/p\u003e","title":"2024-06-25"},{"content":"Hey there! I\u0026rsquo;m Indigo - a computer scientist and engineer hailing from Greenville, South Carolina. I\u0026rsquo;m a quick learner who enjoys taking on new challenges and responsibilities - in a past job, I took responsibility for all computer vision systems on the production line within a month of starting my job, made continuous improvements to their vision and software systems, and achieved a savings of over $500k annually. At my current role at Diesel Laptops, I work on reverse engineering vehicle networks and full-stack software development - C# most of the time, although in my personal work I usually use Python. Outside of work, I\u0026rsquo;ve taken on leadership roles in academic, professional, social, and political organizations throughout my life. In my free time, listening to music, spending time with my friends, and working on my car (2005 Saab 9-2X Aero - if you know you know!). Let\u0026rsquo;s connect!\nWork experience Diesel Laptops LLC - Vehicle Software Engineer Irmo, SC, USA (Remote)\nAugust 2024 - Present\nSpearheaded development of Diesel Laptops’s revolutionary vehicle diagnostics platform Diesel Explorer. Took ownership of - and completed - projects involving vehicle networks (CAN, OBD, WWH, UDS, etc), API services, and customer feature requests. Reverse-engineered manufacturer-specific communication protocols and implemented cost-saving solutions for replacing OEM software tools. Ensured ongoing software evolution, from memory optimization to multithreading to UI improvements. Robert Bosch Inc. – Engineer (Software/AOI) Anderson, SC, USA\nMarch 2023 - August 2024\nTook sole responsibility for all computer vision systems and all related infrastructure in the LTCC production line, utilizing tools from Stratus Vision, Teledyne, ATMO, and our locally-designed LUCA computer vision platform. Performed maintenance and spearheaded ongoing improvement of computer vision systems through projects such as AI implementation, statistical analysis, database management, and more. Provided the department with local support for developing and maintaining software projects involving C++, C#, Python, Excel, R, JavaScript, and MS SQL Server. Led continuous improvement initiatives reducing IDC by over $300k annually. Clemson Computing and Information Technology – IT Technician Clemson, SC, USA\nJanuary 2021 - December 2022\nProvided real-time, in-person A/V system and networking support to university employees and students. Performed hardware and software installs, upgrades, and maintenance across campus. Chick-fil-A – Team Member Cherrydale, SC, USA\nMay 2017 - August 2020\nGranted a great degree of autonomy and trusted to work independently managing a one-of-a-kind Chick-fil-A location. Performed management duties including inventory tracking, forecasting, and order placement, mileage tracking, sales reports, and more. Skills Languages/Frameworks: C, C++, C# (.NET, .NET Core, MVC, EFC), Java, PHP (LAMP), JavaScript, Google Apps Script, HTML, CSS, SQL (MySql, MSSQL), Python (OpenCV, Matplotlib, Eigen), MATLAB, PowerShell, Prolog, OCaml Databases: MySQL, Microsoft SQL Server Tooling: Git, GitLab, Azure DevOps, Postman, Visual Studio, IntelliJ IDEA UI Frameworks: Material UI, TkInter, niceGUI, Qt Other: Scrum, Agile methodologies, Amazon Web Services (EC2, RDS, Elastic Beanstalk), Stratus Vision SPIN/SPINDLE Notable Projects Ada - Smart Home Voice Assistant In-progress project aimed at creating a fully local non-deterministic AI voice assistant capable of answering questions, browsing the web, and controlling home devices (through Home Assistant). Image Classification AI Spearheaded AI project selected for inclusion in executive presentations to German and US Departments of Energy and Bosch Global President, spotlighting over $50K in expected annual savings. Low-Cost Universal Camera Array (LUCA) Helped develop and maintain Bosch’s in-house computer vision system. Gradually took ownership of the project and became the sole developer and maintainer of the project. PDP-11 Instruction Set Simulator Designed a C program that accurately simulates the PDP-11 computer’s assembly language, complete with virtual memory, CPU registers, and a caching system. Input and output are performed via the command line or through files. DriveTime Led a team of five in designing a web application intended to incentivize truck drivers to drive more safely. Utilized C#, CSHMTL, Entity Framework Core, Ebay API, iTunes API, AWS Elastic Beanstalk, AWS EC2, and AWS RDS. Other Leadership Roles IT Liason to Engineering Team 3 (Bosch - 2023-24) Secretary at Clemson Boards (Clemson - 2020-2022) Leader at Chick-fil-A Downtown Greenville (2018-2020) President of the ΗΣΑ National Homeschool Honor Society, ΦΒ chapter (2017-18) Additional Information Completed the Junior Leadership Greenville and Junior Leadership Greer programs. Accumulated hundreds of community service hours through the Honor Society and other opportunities. Completed extracurricular classes in Electric Circuits, Logic \u0026amp; Computing Devices, Systems Programming, MATLAB, and Engineering Concepts. ","permalink":"http://localhost:1313/about/","summary":"about","title":"about indigo"},{"content":"06:14 Write more about Cultivating Knowledge Through Digital Gardenss\nWhat is a knowledge garden?\nZettelkassen\n08:10 I also want to add a page with my contact info and socials. Kind of like a linktree but on my domain and hosted on this site.\n10:38 need to edit Hugo theme so that todo items render correctly\n","permalink":"http://localhost:1313/pages/2024-06-24/","summary":"\u003cp\u003e06:14 Write more about \u003ca href=\"http://localhost:1313/pages/cultivating-knowledge-through-digital-gardens/\"\u003eCultivating Knowledge Through Digital Gardens\u003c/a\u003es\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eWhat is a knowledge garden?\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eZettelkassen\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e08:10 I also want to add a page with my contact info and socials. Kind of like a linktree but on my domain and hosted on this site.\u003c/p\u003e\n\u003cp\u003e10:38 need to edit Hugo theme so that todo items render correctly\u003c/p\u003e","title":"2024-06-24"},{"content":"\rIf a note is not published, does it really exist? - Erwin Schrödinger*\rspores The phrase \u0026ldquo;digital garden\u0026rdquo; is more of an analogy than a descriptive literal. Just as a mushroom garden flourishes from tiny spores into a complex network, a digital garden nurtures small ideas into a rich, interconnected ecosystem of knowledge. Digital gardens are living entities, constantly evolving as they harbor works in progress, nascent ideas, and fleeting thoughts that, over time, grow and intertwine into a robust network of knowledge. Each note in a digital garden starts small. Over time, as the user researches, learns, and grows, they can apply that learning to the note. Through cycles of addition and refinement, these small notes grow into a network of interwoven thoughts and ideas, providing structure and meaning to an otherwise scattered and messy collection of ideas.\ngrafting One of the most significant challenges of maintaining a digital garden is integrating it with one\u0026rsquo;s life in a way that is both seamless and practical. Many attempts have been made throughout history to bridge this gap - consider the commonplace book, a method documented as early as 40 BC by Andronicus of Rhodes in Topics, his compilation of works by Aristotle on the subject of logic. To this day, balancing convenience with functionality remains a struggle. One of my favorite ways of integrating my knowledge base into my life is interstitial journaling. In essence, the idea is to write one\u0026rsquo;s thoughts whenever one has them, along with a timestamp. Then, later, when one has the time and energy, they can expound more on their earlier thoughts. Using this method helps me keep everything organized (one page for every day, organized chronologically) while still being easy to use and navigate.\nmycelium Thus far, if one has been following along with the methods described in this page, one will end up with a messy pile of unrelated notes. Without structure, a collection of notes can resemble a chaotic tangle. Structure can be imposed upon the notes via categorization, but that is work-intensive and can eventually grow to beyond what one can reasonably manage (one could call this the brute force method). A more elegant way of generating structure in one\u0026rsquo;s knowledge is to connect ideas together. By finding the common themes in one\u0026rsquo;s notes, their collection can morph from a disorganized mess into an elegant, navigable system. One method of keeping track of linkages between ideas and topics is Zettelkasten, a personal knowledge management system pioneered by Conrad Gessner in the 1500s. By creating unique identifiers (think URIs) for each note, they can be succinctly referenced by other notes, indexed, and organized with ease. Linking one\u0026rsquo;s notes in such a way enables one to see the greater structure to their knowledge - that is, by seeing the common threads that connect our thoughts, we can begin to understand ourselves and our knowledge even better.\nsuperposition Think back to the quote at the beginning of this article and consider Schrödinger\u0026rsquo;s cat - an analogy for the state of unshared knowledge. If knowledge remains unseen, does it truly contribute to the world? Sharing through digital gardens not only validates our thoughts but also invites others to expand and evolve them, fostering a collective growth of understanding. I decided to share my knowledge with the world through digital garden, so that others can hopefully learn to grow their own.\nread more: What is a digital garden? Danielle Messler\nErwin Schrodinger\nInterstitial Journaling | indi.bio\n*This is not a real quote. It\u0026rsquo;s a joke about superposition and note taking.\n","permalink":"http://localhost:1313/pages/cultivating-knowledge-through-digital-gardens/","summary":"\u003cblockquote class=\"hint \"\u003e\r\n    If a note is not published, does it really exist?\n\u003cem\u003e- Erwin Schrödinger\u003c/em\u003e*\r\n\u003c/blockquote\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/assets/mushrooms-2743051_1280_1719269204314_0.jpg\" alt=\"mushrooms-2743051_1280.jpg\"  /\u003e\r\n\u003c/p\u003e\n\u003ch1 id=\"spores\"\u003espores\u003c/h1\u003e\n\u003cp\u003eThe phrase \u0026ldquo;digital garden\u0026rdquo; is more of an analogy than a descriptive literal. Just as a mushroom garden flourishes from tiny spores into a complex network, a digital garden nurtures small ideas into a rich, interconnected ecosystem of knowledge. Digital gardens are living entities, constantly evolving as they harbor works in progress, nascent ideas, and fleeting thoughts that, over time, grow and intertwine into a robust network of knowledge. Each note in a digital garden starts small. Over time, as the user researches, learns, and grows, they can apply that learning to the note. Through cycles of addition and refinement, these small notes grow into a network of interwoven thoughts and ideas, providing structure and meaning to an otherwise scattered and messy collection of ideas.\u003c/p\u003e","title":"Cultivating Knowledge Through Digital Gardens"},{"content":"09:12 I need to refactor the code for this website and improve the content. There’s not really anything worth reading on it at the moment and I want to change that. I have lots of ideas, but every time I sit down to write at my computer I don’t feel motivated to make content. How can I fix that?\nChange name from archive to something else\nRewrite description block\nAdd images\nSimplify navigation\nindigo.wiki is expensive\ni got indi.bio!\nChange title of ‘archive’ in search bar to resolve confusion\nCreate tagging system? Seems a bit redundant with categories as well\nCould change categories to be a bit more obfuscated e.g.:\ncontent\njournal\nmeta\nother stuff??\nThen create tags like\ncode\nblog\netc\n09:32 Re-export via schrodinger to DONE Check if \u0026lt;% today %\u0026gt; macro works for hugo ssg as well as check if the block link inside this block works\n","permalink":"http://localhost:1313/pages/2024-06-23/","summary":"\u003cp\u003e09:12 I need to refactor the code for this website and improve the content. There’s not really anything worth reading on it at the moment and I want to change that. I have lots of ideas, but every time I sit down to write at my computer I don’t feel motivated to make content. How can I fix that?\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eChange name from archive to something else\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eRewrite description block\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eAdd images\u003c/p\u003e","title":"2024-06-23"},{"content":"I\u0026rsquo;ve done a few projects recently, and I want to add them to the site\nLet\u0026rsquo;s pause and zoom out for a sec - I don\u0026rsquo;t like the structure of this graph. It doesn\u0026rsquo;t work well with the way I\u0026rsquo;ve structured my Hugo templates.\nMove to Graph Structure\nGraph Rendering\n","permalink":"http://localhost:1313/pages/2024-02-18/","summary":"\u003cp\u003eI\u0026rsquo;ve done a few projects recently, and I want to add them to the site\u003c/p\u003e\n\u003cp\u003eLet\u0026rsquo;s pause and zoom out for a sec - I don\u0026rsquo;t like the structure of this graph. It doesn\u0026rsquo;t work well with the way I\u0026rsquo;ve structured my Hugo templates.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eMove to \u003ca href=\"http://localhost:1313/pages/graph-structure/\"\u003eGraph Structure\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"http://localhost:1313/pages/graph-rendering/\"\u003eGraph Rendering\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","title":"2024-02-18"},{"content":"Project goals: Create an interactive \u0026ldquo;graph view\u0026rdquo; of this website to display on its homepage.\nMake it compatible with github pages and hugo\u0026rsquo;s static site specifications.\nResearch: Plotly with Hugo\nLogseq codebase overview\nArticle on logseq codebase structure\nLogseq built-in renderer\nCosma | Installing Cosma (arthurperret.fr)\nLogseq Graph Analysis plugin\nDevelopment themes/PaperModlayouts/partials/home_info.html is the template for my home page\nI need to figure out how to render a graph in this page\nJavaScript parser returns map containing all links\nMap contents:\n+ JavaScript renderer renders everything ","permalink":"http://localhost:1313/pages/graph-rendering/","summary":"\u003ch3 id=\"project-goals\"\u003eProject goals:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eCreate an interactive \u0026ldquo;graph view\u0026rdquo; of this website to display on its homepage.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eMake it compatible with github pages and hugo\u0026rsquo;s static site specifications.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"research\"\u003eResearch:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://mertbakir.gitlab.io/hugo/plotly-with-hugo/\"\u003ePlotly with Hugo\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/logseq/logseq/blob/master/CODEBASE_OVERVIEW.md\"\u003eLogseq codebase overview\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://docs.logseq.com/#/page/The%20Refactoring%20Of%20Logseq\"\u003eArticle on logseq codebase structure\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/logseq/logseq/blob/master/src/main/frontend/extensions/graph/pixi.cljs\"\u003eLogseq built-in renderer\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://cosma.arthurperret.fr/installing.html\"\u003eCosma | Installing Cosma (arthurperret.fr)\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/trashhalo/logseq-graph-analysis/blob/main/src/main.ts\"\u003eLogseq Graph Analysis plugin\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"development\"\u003eDevelopment\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ccode\u003ethemes/PaperModlayouts/partials/home_info.html\u003c/code\u003e is the template for my home page\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eI need to figure out how to render a graph in this page\u003c/p\u003e","title":"Graph Rendering"},{"content":"Description: This is the collection of my code projects that I\u0026rsquo;ve done over the years.\nProject List: PDP-11 Instruction Set Simulator: PDP-11 Instruction Set Simulator\nDriveTime: DriveTime\nImage Classification AI: Image Classification AI\nLow-Cost Universal Camera Array: LUCA\nArchive website (the website you\u0026rsquo;re on)\nHomepage graph view: Graph Rendering ","permalink":"http://localhost:1313/pages/code-projects/","summary":"\u003ch3 id=\"description\"\u003eDescription:\u003c/h3\u003e\n\u003cp\u003eThis is the collection of my code projects that I\u0026rsquo;ve done over the years.\u003c/p\u003e\n\u003ch3 id=\"project-list\"\u003eProject List:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003ePDP-11 Instruction Set Simulator: \u003ca href=\"http://localhost:1313/pages/pdp-11-instruction-set-simulator/\"\u003ePDP-11 Instruction Set Simulator\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDriveTime: \u003ca href=\"http://localhost:1313/pages/drivetime/\"\u003eDriveTime\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eImage Classification AI: \u003ca href=\"http://localhost:1313/pages/image-classification-ai/\"\u003eImage Classification AI\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eLow-Cost Universal Camera Array: \u003ca href=\"http://localhost:1313/pages/luca/\"\u003eLUCA\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eArchive website (the website you\u0026rsquo;re on)\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eHomepage graph view: \u003ca href=\"http://localhost:1313/pages/graph-rendering/\"\u003eGraph Rendering\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","title":"Code Projects"},{"content":"Flesh out this page later\n#Diaries is the tag that I will use to denote a diary entry.\n","permalink":"http://localhost:1313/pages/diaries/","summary":"\u003cp\u003eFlesh out this page later\u003c/p\u003e\n\u003cp\u003e#Diaries is the tag that I will use to denote a diary entry.\u003c/p\u003e","title":"Diaries"},{"content":"DriveTime is a web application intended to incentivize truck drivers to drive more safely. It is built with C#, CSHMTL, Entity Framework Core, Ebay API, iTunes API, AWS Elastic Beanstalk, AWS EC2, and AWS RDS.\n","permalink":"http://localhost:1313/pages/drivetime/","summary":"\u003cp\u003eDriveTime is a web application intended to incentivize truck drivers to drive more safely. It is built with C#, CSHMTL, Entity Framework Core, Ebay API, iTunes API, AWS Elastic Beanstalk, AWS EC2, and AWS RDS.\u003c/p\u003e","title":"DriveTime"},{"content":"I created an AI for automated classification of production line quality control images on Stratus Vision AOI systems. I identified key areas of application and improvement, and performed ongoing fine-tuning and maintenance to the model based on various metrics.\n","permalink":"http://localhost:1313/pages/image-classification-ai/","summary":"\u003cp\u003eI created an AI for automated classification of production line quality control images on Stratus Vision AOI systems. I identified key areas of application and improvement, and performed ongoing fine-tuning and maintenance to the model based on various metrics.\u003c/p\u003e","title":"Image Classification AI"},{"content":"Helped develop and maintain Bosch’s in-house computer vision system. Gradually took ownership of the project and became the sole developer and maintainer of the project.\nThe system is built from a raspberry pi, 8 NVidia Jetson Nano boards, and 16 high-resolution cameras. The cameras are attached to a 3-axis mount controlled by 3 servo motors. LED lighting strips were added later to the inside of the machine in order to add the ability to customize lighting.\n","permalink":"http://localhost:1313/pages/luca/","summary":"\u003cp\u003eHelped develop and maintain Bosch’s in-house computer vision system. Gradually took ownership of the project and became the sole developer and maintainer of the project.\u003c/p\u003e\n\u003cp\u003eThe system is built from a raspberry pi, 8 NVidia Jetson Nano boards, and 16 high-resolution cameras. The cameras are attached to a 3-axis mount controlled by 3 servo motors. LED lighting strips were added later to the inside of the machine in order to add the ability to customize lighting.\u003c/p\u003e","title":"LUCA"},{"content":"Description: This is a C program that accurately simulates the PDP-11 computer\u0026rsquo;s assembly language, complete with virtual memory, CPU registers, and a caching system. Input and output are performed through the command line or through files. Instruction Set: The PDP-11 instruction set contains 12 basic operations to be performed on memory addresses. Operands are represented by 16-bit words, with the leftmost bits containing the opcode and the rightmost bits containing source, destination, and register addresses. In addition, many other operands are supported, allowing for a wide variety of operations to be performed.\nArchitecture: The PDP-11 architecture is a 16-bit instruction set architecture developed by Digital Equipment Corporation for use with PDP-11 computers. It was widely used in the 1970s, but grew less popular in the 1980s and afterwards.\nMemory Memory is represented by 16-bit words in little-endian format. The smallest addressable unit of memory is 8 bits. Registers R0-R7 can each store one word, which points to a location in the computer\u0026rsquo;s 64KB of memory. Low memory addresses are reserved for two-word vectors that serve as places to store the program counter and processor status.\nCPU Registers The PDP-11 contains eight general-purpose 16-bit registers (R0-R7). Register R7 stores the program counter. Other registers have common but not universal use cases.\nAddressing Modes The PDP-11 computer uses eight \u0026ldquo;addressing modes\u0026rdquo;. Each addressing mode alters the operation of the registers as shown in the following chart.\nCode Name Example Description 0n Register Rn The operand is in Rn. 1n Register deferred (Rn) Rn contains the address of the operand. 2n Autoincrement (Rn)+ Rn contains the address of the operand, then increment Rn. 3n Autoincrement deferred @(Rn)+ Rn contains the address of the address of the operand, then increment Rn by 2. 4n Autodecrement -(Rn) Decrement Rn, then use the result as the address of the operand. 5n Autodecrement deferred @-(Rn) Decrement Rn by 2, then use the result as the address of the address of the operand. 6n Index X(Rn) Rn+X is the address of the operand. 7n Index deferred @X(Rn) Rn+X is the address of the address of the operand. The Program Counter has four addressing modes, and the Stack has 6 addressing modes, both of which alter the operation of the system in their own way.\nCode Breakdown: Memory addresses are stored in the following structure:\nint mode stores the operating mode.\nint reg stores the register on which the operation is being performed.\nint addr stores addresses relevant to modes 1-7.\nint value stores a relevant value.\n/* struct to help organize source and destination operand handling */ typedef struct ap { int mode; int reg; int addr; /* used only for modes 1-7 */ int value; } addr_phrase_t; The following global variables are defined:\nuint16_t memory[MEMSIZE] represents the simulated global memory, segregated into 16-bit chunks. MEMSIZE is a predefined variable that determines the amount of memory available to the system.\nuint16_t reg[8] represents the 8 CPU registers, each capable of storing one 16-bit word.\nbool n, z, v, c are single-bit condition codes used to indicate the status of the system.\nAll other global variables are used for statistics purposes and do not affect the operation of the system.\n// Global variables uint16_t memory[MEMSIZE]; // 16-bit memory uint16_t reg[8] = {0}; // R0-R7 bool n, z, v, c; // Condition codes addr_phrase_t src, dst; // Source and destination address phrases bool running; // Flag to indicate if the program is running bool trace = false; bool verbose = false; int memory_reads = 0; int memory_writes = 0; int inst_fetches = 0; int inst_execs = 0; int branch_taken = 0; int branch_execs = 0; The following functions are defined:\noperate() takes a 16-bit instruction as its input, interprets it, and performs the corresponding action.\nget_operand(), update_operand(), and put_operand() all modify the operand.\npstats() and pregs() are defined for development purposes - they print statistics and the values of the registers, respectively.\nThe full code for each of these functions can be seen in the project\u0026rsquo;s GitHub Repository\n// Function prototypes void operate(uint16_t instruction); void get_operand(addr_phrase_t *phrase); void update_operand(addr_phrase_t *phrase); void put_operand(addr_phrase_t *phrase); void add(uint16_t operand); void asl(uint16_t operand); void asr(uint16_t operand); void beq(uint16_t operand); void bne(uint16_t operand); void br(uint16_t operand); void cmp(uint16_t operand); void halt(uint16_t operand); void mov(uint16_t operand); void sob(uint16_t operand); void sub(uint16_t operand); void pstats(); void pregs(); Links GitHub Repository\nWhat the heck is a PDP-11?\nPDP-11 Instruction Set\n","permalink":"http://localhost:1313/pages/pdp-11-instruction-set-simulator/","summary":"\u003ch3 id=\"description\"\u003eDescription:\u003c/h3\u003e\n\u003cp\u003eThis is a C program that accurately simulates the PDP-11 computer\u0026rsquo;s assembly language, complete with virtual memory, CPU registers, and a caching system. Input and output are performed through the command line or through files.\n\u003cimg loading=\"lazy\" src=\"https://cdn.arstechnica.net/wp-content/uploads/2013/10/unix-creators.jpg\" alt=\"A brief tour of the PDP-11, the most influential minicomputer of all time |  Ars Technica\"  /\u003e\r\n\u003c/p\u003e\n\u003ch3 id=\"instruction-set\"\u003eInstruction Set:\u003c/h3\u003e\n\u003cp\u003eThe PDP-11 instruction set contains 12 basic operations to be performed on memory addresses. Operands are represented by 16-bit words, with the leftmost bits containing the opcode and the rightmost bits containing source, destination, and register addresses. In addition, many other operands are supported, allowing for a wide variety of operations to be performed.\u003c/p\u003e","title":"PDP-11 Instruction Set Simulator"},{"content":"This is my first page! I intend to use journals (pages titled with a date) as working spaces. All actual content should be on its own page.\nThings to note when working on this site:\nLogseq-schrodinger uses YAML for the Hugo front-matter. It will convert Logseq page-properties to Hugo front matter.\nLogseq keywords are lowercase converted to Hugo keywords, and category in Logseq is translated to categories for use with Hugo. Logseq links ([[like_this]]) are stripped of [[ and ]].\nAll other keywords are just converted to Hugo keywords.\nFor now you must add date with the posts date in the form of \u0026ldquo;2012-04-06\u0026rdquo; to your Logseq page-properties.\nExample - date:: 2012-04-06\nI need a part of this graph that I can use to put structural data.\nGraph Structure I would also like a place to remind myself how to deploy.\nDeployment Templates, too.\nTemplates ","permalink":"http://localhost:1313/pages/2024-01-20/","summary":"\u003cp\u003eThis is my first page! I intend to use journals (pages titled with a date) as working spaces. All actual content should be on its own page.\u003c/p\u003e\n\u003cp\u003eThings to note when working on this site:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eLogseq-schrodinger uses YAML for the Hugo \u003ca href=\"https://gohugo.io/content-management/front-matter/\"\u003efront-matter\u003c/a\u003e. It will convert Logseq page-properties to Hugo front matter.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eLogseq \u003cem\u003ekeywords\u003c/em\u003e are lowercase converted to Hugo keywords, and \u003cstrong\u003ecategory\u003c/strong\u003e in Logseq is translated to \u003cem\u003ecategories\u003c/em\u003e for use with Hugo. Logseq \u003cem\u003elinks\u003c/em\u003e (\u003ccode\u003e[[like_this]]\u003c/code\u003e) are stripped of \u003ccode\u003e[[\u003c/code\u003e and \u003ccode\u003e]]\u003c/code\u003e.\u003c/p\u003e","title":"2024-01-20"},{"content":"How to deploy to this site: From Logseq, use schrodinger to export all public pages.\nUnzip the new archive and move the new \u0026lsquo;pages\u0026rsquo; folder into tealblu.github.io/content.\nMay also need to copy the \u0026lsquo;assets\u0026rsquo; folder from the /logseq/ directory to the /content/ directory. Inside tealblu.github.io, open a terminal and run hugo\nCreate a new commit and push to the remote graph.\nWait a few minutes for Github Actions to run.\nDone!\n{{embed [[deployment flow]]}}\n","permalink":"http://localhost:1313/pages/deployment/","summary":"\u003ch3 id=\"how-to-deploy-to-this-site\"\u003eHow to deploy to this site:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eFrom Logseq, use schrodinger to export all public pages.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUnzip the new archive and move the new \u0026lsquo;pages\u0026rsquo; folder into tealblu.github.io/content.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eMay also need to copy the \u0026lsquo;assets\u0026rsquo; folder from the \u003ccode\u003e/logseq/\u003c/code\u003e directory to the \u003ccode\u003e/content/\u003c/code\u003e directory.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eInside tealblu.github.io, open a terminal and run \u003ccode\u003ehugo\u003c/code\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eCreate a new commit and push to the remote graph.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWait a few minutes for Github Actions to run.\u003c/p\u003e","title":"Deployment"},{"content":"Current graph state: Structure Specification: Architecture The graph should consist of multiple hub-and-spoke structures.\nThe \u0026ldquo;hubs\u0026rdquo; in this system will be called root pages.\nThe \u0026ldquo;spokes\u0026rdquo; in this system will be called child pages.\nGuidelines Any block larger than one paragraph (subjective) should be its own page.\nAny page longer than two full screens should be split up.\nFull sentences should be used when possible.\nNo orphan pages should ever be pushed to production.\nAll root pages should have a category.\nNo child pages should have a category.\nGraph Development Process: What am I doing? I am figuring out how to structure this graph.\ngraph: a structured collection of data consisting of interlinked nodes\rI am defining a structure now so that it stays organized as it grows.\nJust a few simple rules can turn chaos into order.\rRules should be short and simple.\nRules should be easy to understand.\nWhy am I doing it? As stated above, so that the graph stays organized as it grows.\nThis graph is my public \u0026ldquo;knowledge garden\u0026rdquo;, so I would like it to be as accessible to others as possible.\nWhat are my rules? Any block larger than one paragraph (subjective) should be its own page.\nAny page longer than two full screens should be split up.\nFull sentences should be used when possible.\nNo orphan pages should ever be pushed to production.\nAll root pages should have a category.\nNo child pages should have a category.\n","permalink":"http://localhost:1313/pages/graph-structure/","summary":"\u003ch2 id=\"current-graph-state\"\u003eCurrent graph state:\u003c/h2\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"/assets/image_1708273581197_0.png\" alt=\"image.png\"  /\u003e\r\n\u003c/p\u003e\n\u003ch2 id=\"structure-specification\"\u003eStructure Specification:\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003ch3 id=\"architecture\"\u003eArchitecture\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eThe graph should consist of multiple hub-and-spoke structures.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThe \u0026ldquo;hubs\u0026rdquo; in this system will be called \u003cstrong\u003eroot pages\u003c/strong\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eThe \u0026ldquo;spokes\u0026rdquo; in this system will be called \u003cstrong\u003echild pages\u003c/strong\u003e.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003ch3 id=\"guidelines\"\u003eGuidelines\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eAny block larger than one paragraph (subjective) should be its own page.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eAny page longer than two full screens should be split up.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eFull sentences should be used when possible.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eNo orphan pages should \u003cem\u003eever\u003c/em\u003e be pushed to production.\u003c/p\u003e","title":"Graph Structure"},{"content":"What kind of projects do I do? I\u0026rsquo;m interested in a lot of different stuff! This collection will hopefully become an archive of my various projects, both for my personal reference and to document for future employment purposes. The types of projects here will include:\nCode, programming, and related projects -\u0026gt; Code Projects\nDIY stuff\nMusic\nAnd potentially more\u0026hellip;\n","permalink":"http://localhost:1313/pages/projects-homepage/","summary":"\u003ch3 id=\"what-kind-of-projects-do-i-do\"\u003eWhat kind of projects do I do?\u003c/h3\u003e\n\u003cp\u003eI\u0026rsquo;m interested in a lot of different stuff! This collection will hopefully become an archive of my various projects, both for my personal reference and to document for future employment purposes. The types of projects here will include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eCode, programming, and related projects -\u0026gt; \u003ca href=\"http://localhost:1313/pages/code-projects/\"\u003eCode Projects\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDIY stuff\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eMusic\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eAnd potentially more\u0026hellip;\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e","title":"Projects Homepage"},{"content":"Templates can be used to provide structure to an otherwise unstructured graph. They are relatively self-explanatory - by using a slash command (/template), I can choose which template I want and then paste it anywhere in the file that I have open.\nFor more information, check the official Logseq documentation. metadata template:: metadata template-including-parent:: false\ndate:: YYYY-MM-DD category:: keywords:: public:: true diary template:: diary template-including-parent:: false\n#Diaries \u0026lt;% today %\u0026gt; \u0026lt;% time %\u0026gt;: ","permalink":"http://localhost:1313/pages/templates/","summary":"\u003cp\u003eTemplates can be used to provide structure to an otherwise unstructured graph. They are relatively self-explanatory - by using a slash command (\u003ccode\u003e/template\u003c/code\u003e), I can choose which template I want and then paste it anywhere in the file that I have open.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eFor more information, check the \u003ca href=\"https://hub.logseq.com/features/av5LyiLi5xS7EFQXy4h4K8/how-to-create-and-use-templates-in-logseq/uiwhKfyFJrG7mdrkopjuAG\"\u003eofficial Logseq documentation\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003emetadata\ntemplate:: metadata\ntemplate-including-parent:: false\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003edate:: YYYY-MM-DD\ncategory::\nkeywords::\npublic:: true\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003ediary\ntemplate:: diary\ntemplate-including-parent:: false\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e#Diaries \u0026lt;% today %\u0026gt; \u0026lt;% time %\u0026gt;:\u003c/li\u003e\n\u003c/ul\u003e","title":"Templates"}]